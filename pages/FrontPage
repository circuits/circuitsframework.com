<<div id="newsflash">>
<<include "TwitterWidget.html" parse=False raw=True>>
<</div>>

= circuits =

Lightweight Event driven and Asynchronous Application Framework

circuits is a **Lightweight** **Event** driven and **Asynchronous**
**Application Framework** for the
[[http://www.python.org|Python Programming Language]]
with a strong **Component** Architecture.

circuits also includes a lightweight, high performance and scalable
HTTP/WSGI compliant web server and framework called
[[http://circuitsweb.com|circuits.web]] as well as various I/O and Networking
components.

To take full advantage of circuits and its architecture, circuits
encourages you to design your application in terms of loosely coupled
components. Circuits has a very powerful message passing system that
enables components to interact with each other via events. Applications
written this way tend to be more maintainable, easier to develop and
scale to complex systems.

circuits' **Loosely Coupled** **Component Architecture** allows for a
high level of **Reuse** and **Scalability**. Simpler components can be
combined together to form Complex Components and provide higher level
functionality and abstraction. Much of the circuits component library is
designed and built this way.

<<code lang="sh">>
$ pip install circuits
<</code>>

circuits is licensed under the
[[http://www.opensource.org/licenses/mit-license.php|MIT License]]

<<include "ohloh.html" parse=False raw=True>>

<<div>>
----

<<div float="left">>
**Echo Server:**
<<code lang="python" linenos=True>>
from circuits.net.sockets import TCPServer

class EchoServer(TCPServer):

    def read(self, sock, data):
        return data

(EchoServer(8000)).run()
<</code>>
<</div>>

<<div float="right">>
**Web Server:**
<<code lang="python" linenos=True>>
from circuits.web import Server, Controller, Logger

class Root(Controller):

    def index(self):
        return "Hello World!"

(Server(("0.0.0.0", 8000)) + Root() + Logger()).run()
<</code>>
<</div>>
<</div>>
